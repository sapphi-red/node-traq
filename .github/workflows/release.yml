name: automatic update
on:
  repository_dispatch:
  push:
    branches:
      - master
jobs:
  skip:
    runs-on: ubuntu-latest
    steps:
      - run: echo "[Skip CI] ${{ contains(github.event.head_commit.message, '[skip ci]') }}"
  release:
    name: release
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[skip ci]') == false
    steps:
      - name: checkout
        uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '13'
      - name: setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
          registry-url: 'https://registry.npmjs.org'
      - name: npm ci
        run: npm ci
      - name: build
        run: npm run build
      #- name: Check diff
      #  run: |
      #    git diff --unified=0 > ./diff.txt
      #    if [ -s './diff.txt' ]; then
      #      echo "::set-env name=HAS_DIFF::true"
      #    else
      #      echo "::set-env name=HAS_DIFF::false"
      #    fi
      - name: Set version name
        #if: env.HAS_DIFF == true
        run: |
          #TRAQ_VERSION=$(curl -sS https://api.github.com/repos/traPtitech/traQ/tags | jq '.[0].name' | sed -n s/[\"v]//pg)
          TRAQ_VERSION=3.0.0
          echo "TRAQ ${TRAQ_VERSION}"

          VERSION=$(cat ./package.json | jq .version | sed -n s/\"//pg | sed -n s/-/./p)
          echo "PACKAGE ${VERSION}"
          VERSION_ARR=($(echo $VERSION | tr -s '.' ' '))
          VERSION_SHORT=${VERSION_ARR[0]}.${VERSION_ARR[1]}.${VERSION_ARR[2]}
          echo "PACKAGE SHORT ${VERSION_SHORT}"

          if [ $TRAQ_VERSION = $VERSION_SHORT ]; then
            let VERSION_ARR[3]++ 1
            NEW_VERSION="${VERSION_ARR[0]}.${VERSION_ARR[1]}.${VERSION_ARR[2]}-${VERSION_ARR[3]}"
          else
            NEW_VERSION="${TRAQ_VERSION}-0"
          fi
          echo "PACKAGE NEW ${NEW_VERSION}"
          echo "::set-env name=NEW_VERSION::${NEW_VERSION}"
      - name: npm version & publish
        #if: env.HAS_DIFF == true
        run: |
          git config user.name "sapphi-red+githubactions"
          git config user.email "sapphi-red+githubactions@users.noreply.github.com"

          npm version $NEW_VERSION -m "CI: update to $NEW_VERSION\n\n[ci skip]"
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NEW_VERSION: ${{ env.NEW_VERSION }}
      - name: git push master
        #if: env.HAS_DIFF == true
        uses: ad-m/github-push-action@master
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: git push tag
        #if: env.HAS_DIFF == true
        uses: ad-m/github-push-action@master
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.NEW_VERSION }}
